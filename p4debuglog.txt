 
 gcc -g p1final.c
 gdb ./a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
 
 
 gcc -g p1final.c
 gdb ./a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a.out...done.
(gdb) b main
Breakpoint 1 at 0x7b1: file p1final.c, line 17.
(gdb) r
Starting program: /home/runner/pps-IA1-practice/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p1final.c:17
17  {
(gdb) n
19    input (&a,&b);
(gdb) s
input (a=0x7fff79fd525c, b=0x7fff79fd5260) at p1final.c:5
5     printf("Enter two numbers:");
(gdb) n
6     scanf("%d%d",a,b);
(gdb) n
 
 gcc -g p2final.c
 gdb ./a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
 
 gcc -g p2final.c
 gdb ./a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a.out...done.
(gdb) b main
Breakpoint 1 at 0x7e8: file p2final.c, line 28.
(gdb) r
Starting program: /home/runner/pps-IA1-practice/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p2final.c:28
28  a=input();
(gdb) s
input () at p2final.c:4
4   {
(gdb) n
6     printf("Enter the number:");
(gdb) n
7     scanf("%d",&a);
(gdb) n
Enter the number:5
8     return a;
(gdb) n
9   }
(gdb) n
main () at p2final.c:29
29  b=input();
(gdb) s
input () at p2final.c:4
4   {
(gdb) n
6     printf("Enter the number:");
(gdb) n
7     scanf("%d",&a);
(gdb) n
Enter the number:5
8     return a;
(gdb) n
9   }
(gdb) n
main () at p2final.c:30
30  c=input();
(gdb) s
input () at p2final.c:4
4   {
(gdb) n
6     printf("Enter the number:");
(gdb) n
7     scanf("%d",&a);
(gdb) n
Enter the number:5
8     return a;
(gdb) n
 
 
 gcc -g p3final.c
 gdb ./a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a.out...done.
(gdb) b main
Breakpoint 1 at 0x825: file p3final.c, line 26.
(gdb) r
Starting program: /home/runner/pps-IA1-practice/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p3final.c:26
26    s=input_n();
(gdb) s
input_n () at p3final.c:3
3   {
(gdb) n
5     printf("Enter the value \n");
(gdb) n
Enter the value 
6     scanf("%d",&x);
(gdb) n
5
7     return x;
(gdb) n
8   }
(gdb) n
main () at p3final.c:27
27    i=sum_n(s);
(gdb) s
sum_n (n=5) at p3final.c:11
11    int i,sum=0;
(gdb) n
12    i=1;
(gdb) n
13    for(i=1;i<=n;i++)
(gdb) n
15      sum+=i;
(gdb) n
13    for(i=1;i<=n;i++)
(gdb) n
15      sum+=i;
(gdb) n
13    for(i=1;i<=n;i++)
(gdb) n
15      sum+=i;
(gdb) n
 
 gcc -g p4final.c
 gdb ./a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a.out...done.
(gdb) b main
Breakpoint 1 at 0x8fd: file p4final.c, line 40.
(gdb) r
Starting program: /home/runner/pps-IA1-practice/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p4final.c:40
40  {
(gdb) n
42    n=input_array_size();
(gdb) s
input_array_size () at p4final.c:4
4   {
(gdb) n
6     printf("Enter array size:\n");
(gdb) n
Enter array size:
7     scanf("%d",&n);
(gdb) n
5
8     return n;
(gdb) n
9   }
(gdb) n
main () at p4final.c:43
43    int a[n];
(gdb) s
44    input_array(n,a);
(gdb) s
input_array (n=5, a=0x7ffefd078550) at p4final.c:14
14    printf("Enter the elements of the array:\n");
(gdb) n
Enter the elements of the array:
15    for(i=0; i<n; i++)
(gdb) n
17      scanf("%d",&a[i]);
(gdb) n
5
15    for(i=0; i<n; i++)
(gdb) n
17      scanf("%d",&a[i]);
(gdb) n
6
15    for(i=0; i<n; i++)
(gdb) n
17      scanf("%d",&a[i]);
(gdb) n
8
15    for(i=0; i<n; i++)
(gdb) n
17      scanf("%d",&a[i]);
(gdb) n
8
15    for(i=0; i<n; i++)
(gdb) n
17      scanf("%d",&a[i]);
(gdb) n
8
15    for(i=0; i<n; i++)
(gdb) n
19  }
(gdb) n
main () at p4final.c:45
45    sum = sumofarray(n,a);
(gdb) s
sumofarray (n=5, a=0x7ffefd078550) at p4final.c:22
22    int i,sum=0;
(gdb) n
23    for(i=0; i<n; i++)
(gdb) n
25      sum +=a[i];
(gdb) n
23    for(i=0; i<n; i++)
(gdb) n
25      sum +=a[i];
(gdb) n
23    for(i=0; i<n; i++)
(gdb) n
25      sum +=a[i];
(gdb) n
23    for(i=0; i<n; i++)
(gdb) n
25      sum +=a[i];
(gdb) n
23    for(i=0; i<n; i++)
(gdb) n
25      sum +=a[i];
(gdb) n
23    for(i=0; i<n; i++)
(gdb) n
27  return sum;
(gdb) n
28  }
(gdb) n
main () at p4final.c:46
46    output(n,a,sum);
(gdb) s
output (n=5, a=0x7ffefd078550, sum=35) at p4final.c:32
32    printf("The sumofarray elements\n");
(gdb) n
The sumofarray elements
33    for(i=0;i<n-1; i++)
(gdb) n
35      printf("%d +",a[i]);
(gdb) n
33    for(i=0;i<n-1; i++)
(gdb) n
35      printf("%d +",a[i]);
(gdb) n
33    for(i=0;i<n-1; i++)
(gdb) n
35      printf("%d +",a[i]);
(gdb) n
33    for(i=0;i<n-1; i++)
(gdb) n
35      printf("%d +",a[i]);
(gdb) n
33    for(i=0;i<n-1; i++)
(gdb) n
37    printf("%d is %d \n",a[n-1],sum);
(gdb) n
5 +6 +8 +8 +8 is 35 
38  }
(gdb) n
main () at p4final.c:47
47    return 0;
(gdb) n
49  }(gdb) q
A debugging session is active.

    Inferior 1 [process 532] will be killed.

Quit anyway? (y or n) y
 